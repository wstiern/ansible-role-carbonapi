---
- name: set distro-specific variables
  include_vars: '{{ item }}'
  with_first_found:
    - '{{ ansible_os_family }}.yml'
    - default.yml

- name: check if go-repo is installed already
  stat: path=/etc/yum.repos.d/go-repo.repo
  register: repo_installed

- name: install go-repo gpg key
  command: rpm --import https://mirror.go-repo.io/centos/RPM-GPG-KEY-GO-REPO
  when: repo_installed.stat.isreg is defined and repo_installed.stat.isreg

- name: install go-repo
  yum_repository:
    name: go-repo
    description: go-repo - CentOS
    baseurl: https://mirror.go-repo.io/centos/$releasever/$basearch/
    gpgcheck: yes
    enabled: yes
  when:
    - (ansible_distribution == "CentOS") or (ansible_distribution == "RedHat")

- name: install dependencies
  package: name={{ item }}
  with_items:
    - golang
  when:
    - (ansible_distribution == "CentOS") or (ansible_distribution == "RedHat")

- name: install carbonapi from source
  command: "GOPATH=/tmp go get github.com/go-graphite/carbonapi && GOPATH=/tmp go build github.com/go--graphite/carbonapi && mv /tmp/carbonapi /usr/local/bin/"
  args:
    creates: /usr/local/bin/carbonapi
  when:
  
- name: create required files and folders
  file: path={{ item.dst }} state={{ item.state }}
  with_items:
    - { dst: /var/log/carbonapi/, state: directory }

- name: deploy carbonapi configs
  template: dest=/usr/local/etc/{{ item }} src={{ item }}.j2
  with_items:
    - carbonapi.yaml
  notify:
    - restart carbonapi

- name: deploy systemd service unit file
  template: dest=/etc/systemd/system/{{ item }} src={{ item }}.j2
  with_items:
    - carbonapi.service
  notify:
    - restart carbonapi
  when:     
    - (ansible_distribution == "CentOS") or (ansible_distribution == "RedHat")
    - ansible_distribution_major_version == "7"

- name: enable and start carbonapi
  service: name=carbonapi enabled=yes state=started
